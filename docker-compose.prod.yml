version: '3.8'

services:
  portfolio:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ENVIRONMENT=production
      - DEBUG_MODE=false
      - SITE_NAME=${SITE_NAME:-Universal Portfolio & Web Tools}
      - SITE_URL=${SITE_URL:-https://yourdomain.com}
    volumes:
      - ./private/data:/var/www/html/private/data
      - ./logs:/var/www/html/logs
      - ./.env:/var/www/html/.env
      - ./ssl:/etc/ssl/certs/portfolio:ro  # Mount SSL certificates
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - portfolio-network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - portfolio
    restart: unless-stopped
    networks:
      - portfolio-network

  # Optional: Database for future features
  # db:
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${DB_NAME}
  #     MYSQL_USER: ${DB_USERNAME}
  #     MYSQL_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     - ./backups:/backups
  #   restart: unless-stopped
  #   networks:
  #     - portfolio-network
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure

  # Optional: Redis for caching
  # redis:
  #   image: redis:alpine
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - portfolio-network

volumes:
  mysql_data:
  redis_data:

networks:
  portfolio-network:
    driver: bridge
